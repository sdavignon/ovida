name: Deploy Ovida Web (Static ‚Üí DreamHost)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: '20'
      WEB_DIR: apps/web
      REMOTE_PATH: ${{ vars.REMOTE_PATH }}
      # Static build environment variables (if needed)
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.6

      - name: Install dependencies (root)
        run: pnpm install --frozen-lockfile

      - name: Build @ovida/web
        run: pnpm --filter @ovida/web build
        env:
          # Add any build-time environment variables here if needed
          # NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          # NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          # NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "Checking build output..."
          if [ ! -d "${{ env.WEB_DIR }}/out" ]; then
            echo "Error: Build output directory not found!"
            echo "Expected: ${{ env.WEB_DIR }}/out"
            echo "Contents of ${{ env.WEB_DIR }}:"
            ls -la ${{ env.WEB_DIR }}/
            exit 1
          fi
          
          echo "Build output directory found:"
          ls -la ${{ env.WEB_DIR }}/out/
          
          file_count=$(find ${{ env.WEB_DIR }}/out -type f | wc -l)
          echo "Total files to deploy: $file_count"
          
          if [ "$file_count" -eq 0 ]; then
            echo "Error: No files found in build output!"
            exit 1
          fi
          
          echo "Build verification complete ‚úÖ"

      - name: Upload via SFTP (password)
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          server: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT || '22' }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          sftp_only: true
          local_path: '${{ env.WEB_DIR }}/out/'
          remote_path: ${{ vars.REMOTE_PATH }}
          delete_remote_files: true
          exclude: |
            **/.git*
            **/.github/**
            **/node_modules/**
            **/.DS_Store
            **/.next/cache/**

      - name: Deployment Summary
        if: success()
        run: |
          echo "üöÄ Deployment completed successfully!"
          echo "üìÅ Files deployed to: ${{ vars.REMOTE_PATH }}"
          echo "üåê Your site should be available at: https://ovida.1976.cloud"
          echo "‚è∞ Deployment completed at: $(date)"